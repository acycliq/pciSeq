'''
reads the spots (generated by matlab and simply splits them based on the fov they belong to.
Then is saves the corresponding csv on the filesystem
'''
import pandas as pd
import os
import config
from src.py.common import fov
import logging


logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s:%(levelname)s:%(message)s"
    )
logger = logging.getLogger()


def split_data(fov, data, x_range, y_range, save_dir):
    mask = (data.x.values >= x_range[0]) & \
           (data.x.values < x_range[1]) & \
           (data.y.values >= y_range[0]) & \
           (data.y.values < y_range[1])
    df = data[mask]

    fov_id = fov['fov_id']
    full_path = os.path.join(save_dir, 'spots', 'spots_' + str(fov_id) + '.csv')

    if not os.path.exists(os.path.dirname(full_path)):
        os.makedirs(os.path.dirname(full_path))
    df.to_csv(full_path, index=False)
    logger.info('fov_id: %d saved at: %s ' % (fov_id, full_path))


if __name__ == "__main__":
    wd = os.path.join(config.ROOT_DIR, 'data', 'from_Matlab')
    spots_df = pd.read_csv(os.path.join(wd, 'SpotGlobal.csv'))
    save_dir = os.path.join(wd, 'split')

    fovs_across = config.PREPROCESSOR['FOVS_ACROSS']
    fovs_down = config.PREPROCESSOR['FOVS_DOWN']
    fovsObj = fov.Fov(fovs_across, fovs_down, config.PREPROCESSOR)

    for i, fov in enumerate(fovsObj.fovs):
        x_range = fov['fov_range']['x']
        y_range = fov['fov_range']['y']

        split_data(fov, spots_df, x_range, y_range, save_dir)
